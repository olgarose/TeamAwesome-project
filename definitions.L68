00006000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 5/22/2017 10:13:28 AM

00000000                             1  
00000000                             2  *-----------------------------------------------------------
00000000                             3  * Title      : Disassembler Final Project
00000000                             4  * Written by : Team Awesome (Olga Rocheeva, Dwina Solihin, Peter Stanton)
00000000                             5  * Date       : April 2, 2017
00000000                             6  * Description: CSS 422 Final Project
00000000                             7  *-----------------------------------------------------------
00000000                             8  * Contains variables, constants, and definitions
00000000                             9  *-----------------------------------------------------------
00000000                            10  *Equates opcodes
00000000  =0000000D                 11  CR              EQU     $0D         carriage return
00000000  =0000000A                 12  LF              EQU     $0A         line feed
00000000                            13  *-----------------------------------------------------------
00000000                            14  *Output messages 
00000000= 43 53 53 20 34 32 ...     15  welcome_msg         DC.B    'CSS 422 Disassembler Final Project',CR,LF
00000024= 42 79 20 54 65 61 ...     16                      DC.B    'By Team Awesome (Olga Rocheeva, Dwina Solihin, Peter Stanton)',CR,LF,0
00000064= 45 6E 74 65 72 20 ...     17  location_start_msg  DC.B    'Enter Start location address',CR,LF,0
00000083= 45 6E 74 65 72 20 ...     18  location_end_msg    DC.B    'Enter End location address',CR,LF,0
000000A0= 41 64 64 72 65 73 ...     19  addr_oddBit_msg     DC.B    'Address cannot end on an odd byte.',CR,LF,CR,LF,0
000000C7= 45 6E 64 69 6E 67 ...     20  addr_order_check    DC.B    'Ending Address cannot go before the starting address.',CR,LF,CR,LF,0
00000101= 50 72 65 73 73 20 ...     21  pause_msg           DC.B    'Press enter to continue!',CR,LF
0000011B= 52 65 61 63 68 65 ...     22  endTest_msg         DC.B    'Reached end of test data.', CR,LF
00000136= 54 72 79 20 61 6E ...     23                      DC.B    'Try another location? (yes/no): ',0
00000157= 0D 0A 00                  24  linebreak           DC.B    CR,LF,0
0000015A                            25                      
0000015A                            26  *Printing out the Op-codes required
0000015A= 44 41 54 41 00            27  Invalid_disp        DC.B    'DATA',0
0000015F= 57 52 4F 4E 47 45 ...     28  InvalidEA_disp      DC.B    'WRONGEA',0
00000167                            29  
00000167= 4E 4F 50 00               30  NOP_disp            DC.B    'NOP',0
0000016B= 4D 4F 56 45 00            31  MOVE_disp           DC.B    'MOVE',0
00000170= 4D 4F 56 45 41 00         32  MOVEA_disp          DC.B    'MOVEA',0
00000176= 4D 4F 56 45 51 00         33  MOVEQ_disp          DC.B    'MOVEQ',0
0000017C= 4D 4F 56 45 4D 00         34  MOVEM_disp          DC.B    'MOVEM',0
00000182= 41 44 44 00               35  ADD_disp            DC.B    'ADD',0
00000186= 41 44 44 41 00            36  ADDA_disp           DC.B    'ADDA',0
0000018B= 41 44 44 49 00            37  ADDI_disp           DC.B    'ADDI',0
00000190= 41 44 44 51 00            38  ADDQ_disp           DC.B    'ADDQ',0
00000195= 53 55 42 00               39  SUB_disp            DC.B    'SUB',0
00000199= 4D 55 4C 53 00            40  MULS_disp           DC.B    'MULS',0
0000019E= 44 49 56 55 00            41  DIVU_disp           DC.B    'DIVU',0
000001A3= 4C 45 41 00               42  LEA_disp            DC.B    'LEA',0
000001A7= 43 4C 52 00               43  CLR_disp            DC.B    'CLR',0
000001AB= 41 4E 44 00               44  AND_disp            DC.B    'AND',0
000001AF= 4F 52 00                  45  OR_disp             DC.B    'OR',0
000001B2= 4C 53 4C 00               46  LSL_disp            DC.B    'LSL',0
000001B6= 4C 53 52 00               47  LSR_disp            DC.B    'LSR',0
000001BA= 41 53 4C 00               48  ASL_disp            DC.B    'ASL',0
000001BE= 41 53 52 00               49  ASR_disp            DC.B    'ASR',0
000001C2= 52 4F 4C 00               50  ROL_disp            DC.B    'ROL',0
000001C6= 52 4F 52 00               51  ROR_disp            DC.B    'ROR',0
000001CA= 4A 53 52 00               52  JSR_disp            DC.B    'JSR',0
000001CE= 52 54 53 00               53  RTS_disp            DC.B    'RTS',0
000001D2= 42 43 43 00               54  BCC_disp            DC.B    'BCC',0
000001D6= 42 47 54 00               55  BGT_disp            DC.B    'BGT',0    
000001DA= 42 4C 45 00               56  BLE_disp            DC.b    'BLE',0
000001DE                            57  
000001DE                            58  
000001DE                            59  *Printing out the symbols needed
000001DE= 30 00                     60  hexaTable               DC.B    '0',0
000001E0= 31 00                     61                          DC.B    '1',0
000001E2= 32 00                     62                          DC.B    '2',0
000001E4= 33 00                     63                          DC.B    '3',0
000001E6= 34 00                     64                          DC.B    '4',0
000001E8= 35 00                     65                          DC.B    '5',0
000001EA= 36 00                     66                          DC.B    '6',0
000001EC= 37 00                     67                          DC.B    '7',0
000001EE= 38 00                     68                          DC.B    '8',0
000001F0= 39 00                     69                          DC.B    '9',0
000001F2= 41 00                     70                          DC.B    'A',0
000001F4= 42 00                     71                          DC.B    'B',0
000001F6= 43 00                     72                          DC.B    'C',0
000001F8= 44 00                     73                          DC.B    'D',0
000001FA= 45 00                     74                          DC.B    'E',0
000001FC= 46 00                     75                          DC.B    'F',0
000001FE= 23 00                     76  poundsign               DC.B    '#',0
00000200= 24 00                     77  dollarsign              DC.B    '$',0
00000202= 2B 00                     78  plussign                DC.B    '+',0
00000204= 2D 00                     79  minussign               DC.B    '-',0
00000206= 2C 00                     80  commasign               DC.B    ',',0
00000208= 2F 00                     81  backslashsigh           DC.B    '/',0
0000020A= 28 00                     82  openparen               DC.B    '(',0
0000020C= 29 00                     83  closeparen              DC.B    ')',0
0000020E= 20 00                     84  space                   DC.B    ' ',0   
00000210= 2E 42 00                  85  size_b                  DC.B    '.B',0
00000213= 2E 57 00                  86  size_w                  DC.B    '.W',0        
00000216= 2E 4C 00                  87  size_l                  DC.B    '.L',0
00000219                            88  
00000219                            89  *Defining storage
00000219                            90  linecount               DS.B    1       *storeage for lines on a screen
0000021A= 01                        91  input_buffer            DC.B    1       *creates input buffer for ASCII string
0000021C                            92  location_startData      DS.L    1       *location on where to start reading data
00000220                            93  location_endData        DS.L    1       *location on where to end reading data
00000224                            94  table_length            DS.B    1       *Number of spaces in the table to print to console
00000225                            95  
Line 96 WARNING: END directive missing, starting address not set

No errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDA_DISP           186
ADDI_DISP           18B
ADDQ_DISP           190
ADDR_ODDBIT_MSG     A0
ADDR_ORDER_CHECK    C7
ADD_DISP            182
AND_DISP            1AB
ASL_DISP            1BA
ASR_DISP            1BE
BACKSLASHSIGH       208
BCC_DISP            1D2
BGT_DISP            1D6
BLE_DISP            1DA
CLOSEPAREN          20C
CLR_DISP            1A7
COMMASIGN           206
CR                  D
DIVU_DISP           19E
DOLLARSIGN          200
ENDTEST_MSG         11B
HEXATABLE           1DE
INPUT_BUFFER        21A
INVALIDEA_DISP      15F
INVALID_DISP        15A
JSR_DISP            1CA
LEA_DISP            1A3
LF                  A
LINEBREAK           157
LINECOUNT           219
LOCATION_ENDDATA    220
LOCATION_END_MSG    83
LOCATION_STARTDATA  21C
LOCATION_START_MSG  64
LSL_DISP            1B2
LSR_DISP            1B6
MINUSSIGN           204
MOVEA_DISP          170
MOVEM_DISP          17C
MOVEQ_DISP          176
MOVE_DISP           16B
MULS_DISP           199
NOP_DISP            167
OPENPAREN           20A
OR_DISP             1AF
PAUSE_MSG           101
PLUSSIGN            202
POUNDSIGN           1FE
ROL_DISP            1C2
ROR_DISP            1C6
RTS_DISP            1CE
SIZE_B              210
SIZE_L              216
SIZE_W              213
SPACE               20E
SUB_DISP            195
TABLE_LENGTH        224
WELCOME_MSG         0
